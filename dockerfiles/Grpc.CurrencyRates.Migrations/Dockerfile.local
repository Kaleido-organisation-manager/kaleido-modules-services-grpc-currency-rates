# Use dotnet 8 image as base to build the app
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build-env

# Set the working directory in the container
WORKDIR /app

ARG NUGET_TOKEN
ARG NUGET_USER

# Copy the source code and build the application
COPY ./src/Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations ./Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations
COPY ./src/Kaleido.Modules.Services.Grpc.CurrencyRates ./Kaleido.Modules.Services.Grpc.CurrencyRates
COPY ./src/Proto ./Proto

# Restore the dependencies
RUN dotnet nuget add source --username ${NUGET_USER} --password ${NUGET_TOKEN} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
RUN dotnet restore Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations
RUN dotnet restore Kaleido.Modules.Services.Grpc.CurrencyRates

RUN dotnet build Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations

RUN dotnet publish Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations -c Release -o out

# Build the runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0

LABEL org.opencontainers.image.source=https://github.com/Kaleido-organisation-manager/kaleido-modules-services-grpc-currency-rates
LABEL org.opencontainers.image.description="Container image for the Kaleido Modules Services Grpc Currency Rates Migrations"

ENV "Kestrel:EndpointDefaults:Protocols"="Http2"

WORKDIR /app
COPY --from=build-env /app/out .
ENTRYPOINT ["dotnet", "Kaleido.Modules.Services.Grpc.CurrencyRates.Migrations.dll"]
